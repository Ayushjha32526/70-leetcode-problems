public class Solution {
    public int missingNumber(int[] nums) {
        int n = nums.length;
        int ans = 0;
        for (int i = 1; i <= n; i++) {
            ans = ans ^ i;
        }
        for (int i = 0; i < nums.length; i++) {
            ans = ans ^ nums[i];
        }
        return ans;
    }
}

Step 1: XOR all numbers from 1 to n (i.e., 1 to 9)
java
Copy
Edit
int ans = 0;
for (int i = 1; i <= n; i++) {
    ans = ans ^ i;
}
 
ans = 0 ^ 1 = 1
ans = 1 ^ 2 = 3
ans = 3 ^ 3 = 0
ans = 0 ^ 4 = 4
ans = 4 ^ 5 = 1
ans = 1 ^ 6 = 7
ans = 7 ^ 7 = 0
ans = 0 ^ 8 = 8
ans = 8 ^ 9 = 1
➡️ After this loop, ans = 1

Step 2: XOR all elements in the array
java
Copy
Edit
for (int i = 0; i < nums.length; i++) {
    ans = ans ^ nums[i];
}
nums = [9, 6, 4, 2, 3, 5, 7, 0, 1]
We already have ans = 1, now continue XOR:

 
ans = 1 ^ 9 = 8
ans = 8 ^ 6 = 14
ans = 14 ^ 4 = 10
ans = 10 ^ 2 = 8
ans = 8 ^ 3 = 11
ans = 11 ^ 5 = 14
ans = 14 ^ 7 = 9
ans = 9 ^ 0 = 9
ans = 9 ^ 1 = 8
➡️ After this loop, ans = 8

✅ Final Result:
return ans;  // Output: 8
